Este é um documento teste para o projeto de Sistemas Operativos.
O programa tem a possibilidade de executar comandos.
Comecemos com algo simples como fazer ls desta diretoria.
$ ls
>>>
command.c
command.h
dynArrays.c
dynArrays.h
FicheirodeTeste.nb
f.nb
main.c
makefile
nonexistantCommand.nb
nonexistantFileInput.nb
nonexistantInput.nb
notebook
notebook.c
notebook.h
pipelineError.nb
pipelines.nb
reader.c
reader.h
redirect.nb
run.sh
writesToStdErrCommand.nb
<<<
Podemos também receber o output do comando anterior.
Contemos o numero de linhas do programa.
$| wc -l
>>>
21
<<<
Também conseguimos ler outputs sem ser o anterior.
Vamos tentar retirar a primeira linha do primeiro comando.
$2| line
>>>
command.c
<<<
No que toca a requesitos adicionais nós conseguimos:
Executar pipelines:
$ ls | line
>>>
command.c
<<<
Redirecionar outputs:
$| cat >outputFile.txt
>>>
<<<
Redirecionar inputs:
$2| line >>outputFile.txt
>>>
<<<
Redirecionar outputs com append:
$ cat <outputFile.txt
>>>
command.c
command.c
<<<
E também conseguimos misturar redirecionamento com pipelines:
$ ls | head >outputFile2.txt
>>>
<<<
$ cat <outputFile2.txt | sort -r >outputFile3.txt
>>>
<<<
$ cat <outputFile3.txt
>>>
nonexistantFileInput.nb
nonexistantCommand.nb
makefile
main.c
f.nb
FicheirodeTeste.nb
dynArrays.h
dynArrays.c
command.h
command.c
<<<
Apaguemos agora os ficheiros
$rm outputFile.txt
>>>
<<<
$rm outputFile2.txt
>>>
<<<
$rm outputFile3.txt
>>>
<<<